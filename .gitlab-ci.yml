# .gitlab-ci.yml

stages:
  - build
  - release

variables:
  PACKAGE_NAME: ${CI_PROJECT_NAME}

build_and_pack:
  stage: build
  image: node:22
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules/
    policy: pull-push
  script:
    - echo "Установка зависимостей..."
    - npm ci
    - echo "Сборка и упаковка библиотеки (npm pack)..."
    - npm pack
    # Если вы планируете создавать .zip архивы на этом этапе,
    # они должны быть созданы в корневой директории проекта,
    # чтобы быть захваченными artifacts:paths.

    - |
      echo "DEBUG (build_and_pack): Содержимое текущей директории перед созданием артефактов:"
    - ls -lah
    - |
      echo "DEBUG (build_and_pack): Поиск *.tgz файлов:"
    - |
      ls -lah *.tgz || echo "DEBUG (build_and_pack): *.tgz файлы не найдены командой ls"
    - |
      echo "DEBUG (build_and_pack): Поиск *.zip файлов (если созданы):"
    - |
      ls -lah *.zip || echo "DEBUG (build_and_pack): *.zip файлы не найдены командой ls"
  artifacts:
    paths:
      - '*.tgz'
      - '*.zip'
    expire_in: 1 week

release_job:
  stage: release
  # Используем официальный образ GitLab CLI, который содержит 'glab'
  image: registry.gitlab.com/gitlab-org/cli:latest
  rules:
    - if: $CI_COMMIT_TAG =~ /^v.*/
  script:
    - |
      echo "--- Отладка в release_job: Начало ---"
    - |
      echo "DEBUG (release_job): Текущая директория: $(pwd)"
    - |
      echo "DEBUG (release_job): Содержимое текущей директории ПОСЛЕ загрузки артефактов:"
    - |
      ls -lah
    - |
      echo "DEBUG (release_job): Поиск *.tgz файлов командой ls:"
    - |
      ls -lah *.tgz || echo "DEBUG (release_job): *.tgz файлы не найдены командой ls"
    - |
      echo "DEBUG (release_job): Поиск *.zip файлов командой ls:"
    - |
      ls -lah *.zip || echo "DEBUG (release_job): *.zip файлы не найдены командой ls"
    - |
      echo "--- Отладка в release_job: Конец списка файлов ---"

    - echo "Подготовка описания релиза..."
    - printf "Релиз создан для тега %s." "$CI_COMMIT_TAG" > /tmp/release_notes.txt
    - if [ -n "$CI_COMMIT_TAG_MESSAGE" ]; then
    - printf "\n\nСообщение тега:\n%s" "$CI_COMMIT_TAG_MESSAGE" >> /tmp/release_notes.txt
    - fi
    - printf "\n\nФайлы сборки прикреплены как артефакты." >> /tmp/release_notes.txt
    - RELEASE_NOTES_FILE="/tmp/release_notes.txt" # glab использует --notes или --notes-file / -F

    - |
      echo "DEBUG (release_job): Сформированное описание релиза (содержимое файла $RELEASE_NOTES_FILE):"
    - cat "$RELEASE_NOTES_FILE"
    - echo "----------------------------------------------------"

    - echo "Создание релиза GitLab для тега $CI_COMMIT_TAG используя glab..."

    - |
      glab release create "$CI_COMMIT_TAG" "./dist/*.tgz" \
          --name "Release $CI_COMMIT_TAG" \
          --notes-file "$RELEASE_NOTES_FILE"
  needs:
    - job: build_and_pack
      artifacts: true

workflow:
  rules:
    - if: $CI_COMMIT_TAG =~ /^v.*/
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
