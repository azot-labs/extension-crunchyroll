stages:
  - build
  - release

build_and_pack:
  stage: build
  image: node:22
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules/
    policy: pull-push

  script:
    - echo "Installing dependencies..."
    - npm ci

    - echo "Packing..."
    - npm pack

  artifacts:
    paths:
      - '*.tgz'
      - '*.zip'
    expire_in: 1 week

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG =~ /^v.*/
  script:
    # --- Отладка в release_job ---
    - |
      echo "DEBUG (release_job): Текущая директория: $(pwd)"
    - |
      echo "DEBUG (release_job): Содержимое текущей директории (корень рабочей области) ПОСЛЕ загрузки артефактов:"
    - ls -lah
    - |
      echo "DEBUG (release_job): Поиск *.tgz файлов командой ls:"
    - |
      ls -lah *.tgz || echo "DEBUG (release_job): *.tgz файлы не найдены командой ls"
    - |
      echo "DEBUG (release_job): Поиск *.zip файлов командой ls:"
    - |
      ls -lah *.zip || echo "DEBUG (release_job): *.zip файлы не найдены командой ls"
    - |
      echo "DEBUG (release_job): Поиск *.tgz файлов командой find (рекурсивно):"
    - |
      find . -name "*.tgz" -print || echo "DEBUG (release_job): *.tgz файлы не найдены командой find"
    - |
      echo "DEBUG (release_job): Поиск *.zip файлов командой find (рекурсивно):"
    - |
      find . -name "*.zip" -print || echo "DEBUG (release_job): *.zip файлы не найдены командой find"
    # --- Конец отладки в release_job ---
    - echo "Подготовка описания релиза..."
    - |
      RELEASE_DESCRIPTION="Релиз создан для тега $CI_COMMIT_TAG."
      if [ -n "$CI_COMMIT_TAG_MESSAGE" ]; then
        # Используем printf для безопасной вставки многострочных сообщений тега
        RELEASE_DESCRIPTION=$(printf "%s\n\nСообщение тега:\n%s" "$RELEASE_DESCRIPTION" "$CI_COMMIT_TAG_MESSAGE")
      fi
      RELEASE_DESCRIPTION=$(printf "%s\n\nФайлы сборки прикреплены как артефакты." "$RELEASE_DESCRIPTION")

    - |
      echo "DEBUG (release_job): Сформированное описание релиза:"
    - echo "$RELEASE_DESCRIPTION"
    - echo "----------------------------------------------------"

    - echo "Создание релиза GitLab для тега $CI_COMMIT_TAG..."
    - |
      echo "DEBUG (release_job): Используемые пути для --assets-path:"
    - echo "  --assets-path \"*.tgz\""
    - echo "  --assets-path \"*.zip\""

    - release-cli create --name "Release $CI_COMMIT_TAG" \
      --tag-name $CI_COMMIT_TAG \
      --description "$RELEASE_DESCRIPTION" \
      --assets-path "*.tgz" \
      --assets-path "*.zip"
  needs:
    - job: build_and_pack
      artifacts: true

workflow:
  rules:
    - if: $CI_COMMIT_TAG =~ /^v.*/
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
