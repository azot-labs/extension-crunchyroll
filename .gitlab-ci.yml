stages:
  - build
  - release

variables:
  ARTIFACT_FILES: ''

cache:
  paths:
    - node_modules/

pack:
  stage: build
  image: node:lts
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^v/
      when: on_success
    - when: manual
      allow_failure: false
  before_script:
    - npm ci
  script:
    - npm pack
    - ARTIFACT_FILES=$(ls *.zip *.tgz *.stx 2>/dev/null || true)
    - |
      if [ -z "$ARTIFACT_FILES" ]; then
        echo "Error: No artifacts found."
        exit 1
      fi
    - |
      echo "Found artifacts: $ARTIFACT_FILES"
    - |
      for file in $ARTIFACT_FILES; do
        curl --header "JOB-TOKEN: $CI_JOB_TOKEN" \
          --upload-file "$file" \
          "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/$file"
      done
    - |
      echo "$ARTIFACT_FILES" | tr ' ' '\n' > artifacts.txt
  artifacts:
    paths:
      - artifacts.txt

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs: ['pack']
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^v/
      when: on_success
    - when: manual
  script:
    - |
      # Формируем JSON с артефактами
      LINKS_JSON=$(jq -n '[
        {
          "name": "Source code (zip)",
          "url": "\(env.CI_PROJECT_URL)/-/archive/\(env.CI_COMMIT_TAG)/\(env.CI_PROJECT_NAME)-\(env.CI_COMMIT_TAG).zip"
        },
        {
          "name": "Source code (tar.gz)",
          "url": "\(env.CI_PROJECT_URL)/-/archive/\(env.CI_COMMIT_TAG)/\(env.CI_PROJECT_NAME)-\(env.CI_COMMIT_TAG).tar.gz"
        }
      ] + [
        reduce inputs as $line ([]; . + [{
          "name": $line,
          "url": "\(env.CI_API_V4_URL)/projects/\(env.CI_PROJECT_ID)/packages/generic/\(env.CI_PROJECT_NAME)/\(env.CI_COMMIT_TAG)/\($line)"
        }])
      ]' < artifacts.txt)

      echo "Generated links JSON:"
      echo "$LINKS_JSON" | jq

      # Создаем релиз
      release-cli create \
        --name "Release $CI_COMMIT_TAG" \
        --tag-name "$CI_COMMIT_TAG" \
        --description "Version $CI_COMMIT_TAG of $CI_PROJECT_NAME. Includes pre-built packages." \
        --assets-json "$LINKS_JSON"
