stages:
  - release

release:
  stage: release
  image: ubuntu:latest
  only:
    - tags /^v.*/
  before_script:
    - apt-get update && apt-get install -y curl
    - curl -fsSL https://deb.nodesource.com/setup_lts.x | bash -
    - apt-get install -y nodejs
    - curl --location "https://gitlab.com/api/v4/projects/gitlab-org%2Frelease-cli/-/packages/generic/release-cli/latest/release-cli-linux-amd64" --output /usr/local/bin/release-cli
    - chmod +x /usr/local/bin/release-cli
  script:
    - PACKAGE_NAME=$(npm pkg get name | tr -d '"')
    - TAG_NAME=$CI_COMMIT_TAG
    - VERSION=${TAG_NAME#v}
    - 'echo "Package Name: $PACKAGE_NAME"'
    - 'echo "Tag Name: $TAG_NAME"'
    - 'echo "Version: $VERSION"'
    - npm ci
    - npm pack
    - ARTIFACT_FILE=$(ls -1 *.zip *.tgz 2>/dev/null | head -n 1)
    - 'if [ -z "$ARTIFACT_FILE" ]; then echo "Error: No .zip or .tgz artifact file found after build step."; exit 1; fi'
    - 'echo "Found artifact file: $ARTIFACT_FILE"'
    - LAST_TAG=$(git describe --tags --abbrev=0 --match "v*" HEAD~1 || echo "")
    - RELEASE_NOTES=$(git log --pretty=format:"- %s" $LAST_TAG..HEAD)
    - IS_PRERELEASE=false
    - if [[ "$TAG_NAME" == *-* ]]; then IS_PRERELEASE=true; fi
    - |
      release-cli create --name "Release $TAG_NAME" \
        --tag-name "$TAG_NAME" \
        --description "$RELEASE_NOTES" \
        --assets-link "{\"name\":\"$ARTIFACT_FILE\",\"url\":\"$CI_PROJECT_URL/-/jobs/$CI_JOB_ID/artifacts/raw/$ARTIFACT_FILE\"}" \
        --prerelease $IS_PRERELEASE
